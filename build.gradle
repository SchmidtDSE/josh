plugins {
    id 'java'
    id 'eclipse' // optional (to generate Eclipse project files)
    id 'idea' // optional (to generate IntelliJ IDEA project files)
    id 'application' // for creating executable JARs
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(platform('org.junit:junit-bom:5.12.0'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
}

application {
    mainClass = 'org.joshsim.JoshSim'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

// Fat JAR task
task fatJar(type: Jar) {
    manifest {
        attributes(
            'Main-Class': 'org.joshsim.JoshSim'
        )
    }
    archiveBaseName = 'joshsim'
    archiveClassifier = 'fat'
    
    // Include all dependencies
    from { 
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } 
    }
    
    // Include the main classes
    with jar
    
    // Exclude META-INF signatures to avoid security exceptions
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}

javadoc {
    options {
        outputLevel = JavadocOutputLevel.QUIET
        encoding = 'UTF-8'
        memberLevel = JavadocMemberLevel.PROTECTED
        links "https://docs.oracle.com/en/java/javase/11/docs/api/"
        windowTitle = "JoshLang"
    }
    
    destinationDir = file("${buildDir}/docs/javadoc")
}
